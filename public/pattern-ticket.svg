<svg xmlns="http://www.w3.org/2000/svg" width="600" height="280" viewBox="0 0 600 280" fill="none">
  <path
    fill="#ffffff"
    fill-rule="evenodd"
    d="M0 12C0 5.373 5.373 0 12 0h438.958c5.37 0 9.876 3.759 12.94 8.169C468.863 15.319 477.135 20 486.5 20s17.637-4.681 22.602-11.831c3.064-4.41 7.57-8.169 12.94-8.169H588c6.627 0 12 5.373 12 12v256c0 6.627-5.373 12-12 12h-65.958c-5.37 0-9.876-3.759-12.94-8.169C504.137 264.681 495.865 260 486.5 260s-17.637 4.681-22.602 11.831c-3.064 4.41-7.57 8.169-12.94 8.169H12c-6.627 0-12-5.373-12-12V12Z"
    clip-rule="evenodd"
  />
</svg>


<!-- <svg xmlns="http://www.w3.org/2000/svg" width="600" height="280" fill="none" viewBox="0 0 600 280"><g filter="url(#a)"><mask id="d" fill="#fff"><path fill-rule="evenodd" d="M0 12C0 5.373 5.373 0 12 0h438.958c5.37 0 9.876 3.759 12.94 8.169C468.863 15.319 477.135 20 486.5 20s17.637-4.681 22.602-11.831c3.064-4.41 7.57-8.169 12.94-8.169H588c6.627 0 12 5.373 12 12v256c0 6.627-5.373 12-12 12h-65.958c-5.37 0-9.876-3.759-12.94-8.169C504.137 264.681 495.865 260 486.5 260s-17.637 4.681-22.602 11.831c-3.064 4.41-7.57 8.169-12.94 8.169H12c-6.627 0-12-5.373-12-12V12Z" clip-rule="evenodd"/></mask><path fill="url(#b)" fill-rule="evenodd" d="M0 12C0 5.373 5.373 0 12 0h438.958c5.37 0 9.876 3.759 12.94 8.169C468.863 15.319 477.135 20 486.5 20s17.637-4.681 22.602-11.831c3.064-4.41 7.57-8.169 12.94-8.169H588c6.627 0 12 5.373 12 12v256c0 6.627-5.373 12-12 12h-65.958c-5.37 0-9.876-3.759-12.94-8.169C504.137 264.681 495.865 260 486.5 260s-17.637 4.681-22.602 11.831c-3.064 4.41-7.57 8.169-12.94 8.169H12c-6.627 0-12-5.373-12-12V12Z" clip-rule="evenodd"/><path fill="url(#c)" d="m463.898 271.831 1.232.856-1.232-.856Zm45.204 0 1.232-.856-1.232.856Zm0-263.662 1.232.856-1.232-.856Zm-45.204 0-1.232.856 1.232-.856ZM450.958-1.5H12v3h438.958v-3Zm35.542 20c-8.853 0-16.673-4.423-21.37-11.187l-2.464 1.712C467.9 16.56 476.623 21.5 486.5 21.5v-3Zm21.37-11.187C503.173 14.077 495.353 18.5 486.5 18.5v3c9.877 0 18.6-4.94 23.834-12.475l-2.464-1.712ZM588-1.5h-65.958v3H588v-3ZM601.5 268V12h-3v256h3Zm-79.458 13.5H588v-3h-65.958v3Zm-35.542-20c8.853 0 16.673 4.423 21.37 11.187l2.464-1.712C505.1 263.439 496.377 258.5 486.5 258.5v3Zm-21.37 11.187c4.697-6.764 12.517-11.187 21.37-11.187v-3c-9.877 0-18.6 4.939-23.834 12.475l2.464 1.712ZM12 281.5h438.958v-3H12v3ZM-1.5 12v256h3V12h-3ZM12 278.5c-5.799 0-10.5-4.701-10.5-10.5h-3c0 7.456 6.044 13.5 13.5 13.5v-3Zm450.666-7.525c-2.952 4.25-7.065 7.525-11.708 7.525v3c6.097 0 10.997-4.242 14.172-8.813l-2.464-1.712Zm59.376 7.525c-4.643 0-8.756-3.275-11.708-7.525l-2.464 1.712c3.175 4.571 8.075 8.813 14.172 8.813v-3ZM588 1.5c5.799 0 10.5 4.701 10.5 10.5h3c0-7.456-6.044-13.5-13.5-13.5v3Zm-77.666 7.525c2.952-4.25 7.065-7.525 11.708-7.525v-3c-6.097 0-10.997 4.242-14.172 8.813l2.464 1.712ZM12-1.5C4.544-1.5-1.5 4.544-1.5 12h3C1.5 6.201 6.201 1.5 12 1.5v-3ZM598.5 268c0 5.799-4.701 10.5-10.5 10.5v3c7.456 0 13.5-6.044 13.5-13.5h-3ZM450.958 1.5c4.643 0 8.756 3.275 11.708 7.525l2.464-1.712c-3.175-4.571-8.075-8.813-14.172-8.813v3Z" mask="url(#d)"/></g><rect width="3" height="16" x="485" y="42" fill="#fff" opacity=".2" rx="1.5"/><rect width="3" height="16" x="485" y="72" fill="#fff" opacity=".2" rx="1.5"/><rect width="3" height="16" x="485" y="102" fill="#fff" opacity=".2" rx="1.5"/><rect width="3" height="16" x="485" y="132" fill="#fff" opacity=".2" rx="1.5"/><rect width="3" height="16" x="485" y="162" fill="#fff" opacity=".2" rx="1.5"/><rect width="3" height="16" x="485" y="192" fill="#fff" opacity=".2" rx="1.5"/><rect width="3" height="16" x="485" y="222" fill="#fff" opacity=".2" rx="1.5"/><defs><linearGradient id="b" x1="610" x2="69.328" y1="26.462" y2="306.194" gradientUnits="userSpaceOnUse"><stop stop-color="#fff" stop-opacity=".3"/><stop offset="1" stop-color="#fff" stop-opacity=".1"/></linearGradient><linearGradient id="c" x1="0" x2="599.999" y1="140" y2="139.351" gradientUnits="userSpaceOnUse"><stop stop-color="#fff"/><stop offset="1" stop-color="#F37362"/></linearGradient><filter id="a" width="680" height="360" x="-40" y="-40" color-interpolation-filters="sRGB" filterUnits="userSpaceOnUse"><feFlood flood-opacity="0" result="BackgroundImageFix"/><feGaussianBlur in="BackgroundImageFix" stdDeviation="20"/><feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_107_802"/><feBlend in="SourceGraphic" in2="effect1_backgroundBlur_107_802" result="shape"/></filter></defs></svg>


import { useEffect, useRef, useState } from "react";
import { FaEllipsisVertical } from "react-icons/fa6";
import { DeleteModal } from "./DeleteModal";
import TicketPreviewModal from "./TicketPreviewModal";
import { useQuery } from "@tanstack/react-query";
import { Ticket, User } from "../../../types";
import { useAuth } from "../../../contexts/AuthContext";
import { getEventDetails } from "../../../services/eventServices";
import { getTicketTypeById } from "../../../services/ticketServices";
import { supabase } from "../../../services/supabaseClient";
import { AnimatePresence, motion } from "motion/react";

export const TicketCard = ({
  ticket,
  onSelect,
  deleteTicket,
  openModal,
  setOpenModal,
}: {
  ticket: Ticket;
  onSelect: (ticket: Ticket) => void;
  deleteTicket: (id: string) => void;
  openModal: boolean;
  setOpenModal: (state: boolean) => void;
  selectedTicket: Ticket;
}) => {
  const [showOptions, setShowOptions] = useState(false);
  const [showDeleteModal, setShowDeleteModal] = useState(false);
  const optionRef = useRef<HTMLDivElement | null>(null);
  const { user } = useAuth();

  const [ticketUser, setTicketUser] = useState<User | null>(null);

  const {
    data: ticketEvent,
    error: eventError,
    isLoading: isFetchingEvent,
  } = useQuery({
    queryFn: () => getEventDetails(ticket.eventId),
    queryKey: ["event", ticket.eventId],
    enabled: !!ticket.eventId,
  });

  const {
    data: ticketType,
    error: ticketTypeError,
    isLoading: isGettingTicketType,
  } = useQuery({
    queryFn: () => getTicketTypeById(ticket.ticketTypeId),
    queryKey: ["ticketType", ticket.ticketTypeId],
    enabled: !!ticket.ticketTypeId,
  });

  useEffect(() => {
    const setUser = async () => {
      if (user?.id && user.id === ticket.userId) {
        setTicketUser(user);
      } else {
        const { data, error } = await supabase
          .from("users")
          .select("*")
          .eq("id", ticket.userId)
          .single();

        if (error) throw error;

        setTicketUser(data);
      }
    };

    setUser();
  }, [ticket.userId, user]);

  const handleShowOption = () => {
    setShowOptions(true);
  };

  const handleViewTicket = () => {
    onSelect(ticket);
    setShowOptions(false);
  };

  const handleClickOutside = (e: MouseEvent) => {
    if (optionRef.current && !optionRef.current.contains(e.target as Node)) {
      setShowOptions(false);
    }
  };

  useEffect(() => {
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  const handleOpenDeleteModal = () => {
    setShowDeleteModal(true);
  };

  if (eventError) return <div>{eventError.message}</div>;
  if (ticketTypeError) return <div>{ticketTypeError.message}</div>;

  return (
    <div>
      <motion.div
        key={ticket.id}
        className="relative flex rounded-lg shadow-lg h-36 w-[400px] bg-gradient-to-br from-primary-100 to-secondary-300 border-2 border-dashed border-secondary-200"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.3 }}
        whileHover={{ scale: 1.02 }}
      >
        {/* Perforation effect */}
        <div className="absolute -bottom-[2px] left-0 right-0 h-[4px] bg-repeat-x bg-[length:10px_2px] bg-gradient-to-r from-transparent via-secondary to-transparent" />

        {/* Image section with ticket notch */}
        <div className="relative aspect-square min-h-full overflow-hidden rounded-l-lg">
          <div className="absolute right-0 top-1/2 w-3 h-6 bg-secondary -translate-y-1/2 translate-x-1/2 clip-triangle" />
          {isFetchingEvent ? (
            <div className="w-full h-full bg-gray-200 animate-pulse" />
          ) : ticketEvent?.image ? (
            <img
              src={ticketEvent.image}
              alt={ticketEvent.name}
              className="w-full h-full object-cover"
            />
          ) : (
            <div className="w-full h-full bg-gray-100 flex items-center justify-center">
              <span className="text-gray-400 text-sm">No image</span>
            </div>
          )}
        </div>

        {/* Content section */}
        <div className="p-4 pr-8 flex-1 relative">
          {/* Decorative stripe */}
          <div className="absolute left-0 top-0 bottom-0 w-2 bg-gradient-to-b from-secondary to-secondary-100" />

          <div className="ml-3">
            {isFetchingEvent ? (
              <div className="w-36 rounded-sm h-4 bg-gray-200 animate-pulse mb-2" />
            ) : (
              <motion.h3
                className="text-sm md:text-lg mb-2 font-bold text-secondary"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
              >
                {ticketEvent?.name}
              </motion.h3>
            )}
          </div>

          {/* Option button */}
          <motion.div
            className="absolute top-4 right-4"
            ref={optionRef}
            initial={{ scale: 0.9 }}
            animate={{ scale: 1 }}
          >
            <button
              className="flex items-center justify-center p-1 hover:bg-secondary-100 cursor-pointer rounded-md p-1 transition-colors"
              onClick={handleShowOption}
            >
              <FaEllipsisVertical className="text-gray-600 text-sm" />
            </button>

            <AnimatePresence>
              {showOptions && (
                <motion.ul
                  initial={{ opacity: 0, y: -10 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -10 }}
                  className="absolute right-0 mt-2 w-28 bg-secondary rounded-md shadow-lg border border-secondary-100 z-10"
                >
                  <motion.li whileHover={{ scale: 1.05 }}>
                    <button
                      className="w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50"
                      onClick={handleViewTicket}
                    >
                      View Ticket
                    </button>
                  </motion.li>
                  <motion.li whileHover={{ scale: 1.05 }}>
                    <button
                      className="w-full text-left px-3 py-2 text-sm text-red-600 hover:bg-gray-50"
                      onClick={handleOpenDeleteModal}
                    >
                      Delete Ticket
                    </button>
                  </motion.li>
                </motion.ul>
              )}
            </AnimatePresence>
          </motion.div>
        </div>

        {showDeleteModal && (
          <DeleteModal
            onclick={() => deleteTicket(ticket.id)}
            onclose={() => setShowDeleteModal(false)}
          />
        )}
      </motion.div>

      {openModal && (
        <motion.div
          className="fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
        >
          {isGettingTicketType ? (
            <motion.div
              className="bg-secondary rounded-lg p-6 w-96"
              initial={{ scale: 0.9 }}
              animate={{ scale: 1 }}
            >
              <div className="h-64 bg-gray-200 animate-pulse rounded-lg" />
            </motion.div>
          ) : (
            <TicketPreviewModal
              ticketEvent={ticketEvent}
              ticketUser={ticketUser}
              ticketType={ticketType}
              ticket={ticket}
              onclose={setOpenModal}
            />
          )}
        </motion.div>
      )}
    </div>
  );
};

 -->